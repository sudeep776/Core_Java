Float and double use IEEE representation to store the values in binary.

How does float store the values in memory
1bit 8bit 23bits

1 bit stores the sign
8 bit stores the exponent
23bit stores the mantissa

Eg : 4.125f

Step-1 : Convert to binary
Integer part -> 4
4/2 = 2 rem =0
2/2 = 1 rem =0
1/2 = 0 rem = 1
Quotient is 0
The remainder is 1 0 0

Decimal world -> 0.125
0.125 * 2 = 0.250 Integer = 0
0.250 * 2 = 0.500 Integer = 0
0.500 * 2 = 1.00 Integer = 1
Result is 0 0 1

Together 100.001

Step 2 : Make it in the form of 1.xxx * 2exp
100.001 shift 2 places to left
1.00001 * 2^2 since base is 2

Step 3 : Add bias to exponenet
Since bias for float is 127
127+2 = 129

Step 4: fill numners
0 -> sign bit
1 0 0 0 0 0 1 -> Binary of exponenet with bias
0 0 0 0 1 -> Mantissa and the rest are 0s
So 0 1 0 0 0 0 0 1 0 0 0 0 1 0 0 0 0 0..0

Now lets convert this binary back to float
(-1)^sign * (1 + mantissa) * 2^exp-127

(-1)^0 * (1 + 00001) * 2^(129-127)
1 * (1 + 2^-5) * 2^2
1 * (1 + 0.03125) * 4   --> 4.125





